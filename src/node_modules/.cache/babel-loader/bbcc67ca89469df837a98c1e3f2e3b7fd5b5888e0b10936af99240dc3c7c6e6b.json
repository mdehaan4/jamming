{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matthew De Haan\\\\jamming\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport SearchBar from './SearchBar/SearchBar';\nimport SearchResults from './SearchResults/SearchResults';\nimport Playlist from './Playlist/Playlist';\nimport Spotify from './Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState('New Playlist');\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    const token = Spotify.getAccessToken();\n    if (token) {\n      localStorage.setItem('accessToken', token);\n      console.log('Access Token:', token);\n\n      // Fetch user info after getting access token\n      Spotify.getUserInfo().then(data => {\n        setUsername(data.display_name);\n        console.log('Spotify User Profile:', data);\n      }).catch(error => {\n        console.error('Error fetching user profile:', error);\n      });\n    } else {\n      const storedToken = localStorage.getItem('accessToken');\n      if (storedToken) {\n        console.warn('Using stored access token.');\n      } else {\n        console.warn('No access token available.');\n      }\n    }\n  }, []); // Dependency array should be empty if there are no external dependencies.\n\n  const search = useCallback(term => {\n    console.log('Search term:', term);\n    if (!term) {\n      setSearchResults([]);\n      return;\n    }\n    setLoading(true);\n    Spotify.search(term).then(results => {\n      setSearchResults(results);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error during search:', error);\n      setLoading(false);\n    });\n  }, []);\n  const addTrack = useCallback(track => {\n    if (playlistTracks.some(savedTrack => savedTrack.id === track.id)) return;\n    setPlaylistTracks(prevTracks => [...prevTracks, track]);\n  }, [playlistTracks]);\n  const removeTrack = useCallback(track => {\n    setPlaylistTracks(prevTracks => prevTracks.filter(currentTrack => currentTrack.id !== track.id));\n  }, []);\n  const updatePlaylistName = useCallback(name => {\n    setPlaylistName(name);\n  }, []);\n  const savePlaylist = useCallback(() => {\n    const trackUris = playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      setPlaylistName('New Playlist'); // Reset playlist name after saving\n      setPlaylistTracks([]); // Clear playlist tracks after saving\n    }).catch(error => {\n      console.error('Error saving playlist:', error);\n    });\n  }, [playlistName, playlistTracks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), username && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-playlist-container\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SearchResults, {\n        searchResults: searchResults,\n        onAdd: addTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        playlistName: playlistName,\n        playlistTracks: playlistTracks,\n        onNameChange: updatePlaylistName,\n        onRemove: removeTrack,\n        onSave: savePlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"k0nMlCj0eJftG4D9j9r7+OgvWgw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","SearchBar","SearchResults","Playlist","Spotify","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","loading","setLoading","username","setUsername","token","getAccessToken","localStorage","setItem","console","log","getUserInfo","then","data","display_name","catch","error","storedToken","getItem","warn","search","term","results","addTrack","track","some","savedTrack","id","prevTracks","removeTrack","filter","currentTrack","updatePlaylistName","name","savePlaylist","trackUris","map","uri","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onAdd","onNameChange","onRemove","onSave","_c","$RefreshReg$"],"sources":["C:/Users/Matthew De Haan/jamming/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './App.css';\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport SearchResults from './SearchResults/SearchResults';\r\nimport Playlist from './Playlist/Playlist';\r\nimport Spotify from './Spotify';\r\n\r\nconst App = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [playlistName, setPlaylistName] = useState('New Playlist');\r\n  const [playlistTracks, setPlaylistTracks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n\r\n  useEffect(() => {\r\n    const token = Spotify.getAccessToken();\r\n    if (token) {\r\n      localStorage.setItem('accessToken', token);\r\n      console.log('Access Token:', token);\r\n\r\n      // Fetch user info after getting access token\r\n      Spotify.getUserInfo()\r\n        .then((data) => {\r\n          setUsername(data.display_name);\r\n          console.log('Spotify User Profile:', data);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching user profile:', error);\r\n        });\r\n    } else {\r\n      const storedToken = localStorage.getItem('accessToken'); \r\n      if (storedToken) {\r\n        console.warn('Using stored access token.');\r\n      } else {\r\n        console.warn('No access token available.');\r\n      }\r\n    }\r\n  }, []); // Dependency array should be empty if there are no external dependencies.\r\n\r\n  const search = useCallback((term) => {\r\n    console.log('Search term:', term);\r\n    if (!term) {\r\n      setSearchResults([]);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    Spotify.search(term)\r\n      .then((results) => {\r\n        setSearchResults(results);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during search:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const addTrack = useCallback((track) => {\r\n    if (playlistTracks.some((savedTrack) => savedTrack.id === track.id)) return;\r\n    setPlaylistTracks((prevTracks) => [...prevTracks, track]);\r\n  }, [playlistTracks]);\r\n\r\n  const removeTrack = useCallback((track) => {\r\n    setPlaylistTracks((prevTracks) => prevTracks.filter((currentTrack) => currentTrack.id !== track.id));\r\n  }, []);\r\n\r\n  const updatePlaylistName = useCallback((name) => {\r\n    setPlaylistName(name);\r\n  }, []);\r\n\r\n  const savePlaylist = useCallback(() => {\r\n    const trackUris = playlistTracks.map((track) => track.uri);\r\n    Spotify.savePlaylist(playlistName, trackUris)\r\n      .then(() => {\r\n        setPlaylistName('New Playlist'); // Reset playlist name after saving\r\n        setPlaylistTracks([]); // Clear playlist tracks after saving\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error saving playlist:', error); \r\n      });\r\n  }, [playlistName, playlistTracks]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>\r\n        Ja<span className=\"highlight\">mmm</span>ing\r\n      </h1>\r\n\r\n      {username && (\r\n        <div className=\"welcome-message\">\r\n          <p>Welcome, {username}!</p>\r\n        </div>\r\n      )}\r\n\r\n      <SearchBar onSearch={search} />\r\n\r\n      <div className=\"App-playlist-container\">\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <SearchResults searchResults={searchResults} onAdd={addTrack} />\r\n        )}\r\n        <Playlist\r\n          playlistName={playlistName}\r\n          playlistTracks={playlistTracks}\r\n          onNameChange={updatePlaylistName}\r\n          onRemove={removeTrack}\r\n          onSave={savePlaylist}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,cAAc,CAAC;EAChE,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMoB,KAAK,GAAGf,OAAO,CAACgB,cAAc,CAAC,CAAC;IACtC,IAAID,KAAK,EAAE;MACTE,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,KAAK,CAAC;MAC1CI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,KAAK,CAAC;;MAEnC;MACAf,OAAO,CAACqB,WAAW,CAAC,CAAC,CAClBC,IAAI,CAAEC,IAAI,IAAK;QACdT,WAAW,CAACS,IAAI,CAACC,YAAY,CAAC;QAC9BL,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEG,IAAI,CAAC;MAC5C,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;QAChBP,OAAO,CAACO,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,CAAC;IACN,CAAC,MAAM;MACL,MAAMC,WAAW,GAAGV,YAAY,CAACW,OAAO,CAAC,aAAa,CAAC;MACvD,IAAID,WAAW,EAAE;QACfR,OAAO,CAACU,IAAI,CAAC,4BAA4B,CAAC;MAC5C,CAAC,MAAM;QACLV,OAAO,CAACU,IAAI,CAAC,4BAA4B,CAAC;MAC5C;IACF;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,MAAM,GAAGlC,WAAW,CAAEmC,IAAI,IAAK;IACnCZ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEW,IAAI,CAAC;IACjC,IAAI,CAACA,IAAI,EAAE;MACTzB,gBAAgB,CAAC,EAAE,CAAC;MACpB;IACF;IAEAM,UAAU,CAAC,IAAI,CAAC;IAChBZ,OAAO,CAAC8B,MAAM,CAACC,IAAI,CAAC,CACjBT,IAAI,CAAEU,OAAO,IAAK;MACjB1B,gBAAgB,CAAC0B,OAAO,CAAC;MACzBpB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDa,KAAK,CAAEC,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5Cd,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqB,QAAQ,GAAGrC,WAAW,CAAEsC,KAAK,IAAK;IACtC,IAAIzB,cAAc,CAAC0B,IAAI,CAAEC,UAAU,IAAKA,UAAU,CAACC,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC,EAAE;IACrE3B,iBAAiB,CAAE4B,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAEJ,KAAK,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACzB,cAAc,CAAC,CAAC;EAEpB,MAAM8B,WAAW,GAAG3C,WAAW,CAAEsC,KAAK,IAAK;IACzCxB,iBAAiB,CAAE4B,UAAU,IAAKA,UAAU,CAACE,MAAM,CAAEC,YAAY,IAAKA,YAAY,CAACJ,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC,CAAC;EACtG,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,kBAAkB,GAAG9C,WAAW,CAAE+C,IAAI,IAAK;IAC/CnC,eAAe,CAACmC,IAAI,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGhD,WAAW,CAAC,MAAM;IACrC,MAAMiD,SAAS,GAAGpC,cAAc,CAACqC,GAAG,CAAEZ,KAAK,IAAKA,KAAK,CAACa,GAAG,CAAC;IAC1D/C,OAAO,CAAC4C,YAAY,CAACrC,YAAY,EAAEsC,SAAS,CAAC,CAC1CvB,IAAI,CAAC,MAAM;MACVd,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC;MACjCE,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CACDe,KAAK,CAAEC,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,CAACnB,YAAY,EAAEE,cAAc,CAAC,CAAC;EAElC,oBACEP,OAAA;IAAK8C,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB/C,OAAA;MAAA+C,QAAA,GAAI,IACA,eAAA/C,OAAA;QAAM8C,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,OAC1C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEJxC,QAAQ,iBACPX,OAAA;MAAK8C,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9B/C,OAAA;QAAA+C,QAAA,GAAG,WAAS,EAACpC,QAAQ,EAAC,GAAC;MAAA;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACN,eAEDnD,OAAA,CAACL,SAAS;MAACyD,QAAQ,EAAExB;IAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE/BnD,OAAA;MAAK8C,SAAS,EAAC,wBAAwB;MAAAC,QAAA,GACpCtC,OAAO,gBACNT,OAAA;QAAA+C,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEjBnD,OAAA,CAACJ,aAAa;QAACO,aAAa,EAAEA,aAAc;QAACkD,KAAK,EAAEtB;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAChE,eACDnD,OAAA,CAACH,QAAQ;QACPQ,YAAY,EAAEA,YAAa;QAC3BE,cAAc,EAAEA,cAAe;QAC/B+C,YAAY,EAAEd,kBAAmB;QACjCe,QAAQ,EAAElB,WAAY;QACtBmB,MAAM,EAAEd;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjD,EAAA,CA1GID,GAAG;AAAAwD,EAAA,GAAHxD,GAAG;AA4GT,eAAeA,GAAG;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}