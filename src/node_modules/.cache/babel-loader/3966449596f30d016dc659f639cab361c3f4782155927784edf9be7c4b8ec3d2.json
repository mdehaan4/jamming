{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matthew De Haan\\\\jamming\\\\src\\\\Playlist\\\\Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Playlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playlist({\n  playlistName,\n  playlistTracks,\n  onRemove,\n  onSave,\n  onNameChange\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [newPlaylistName, setNewPlaylistName] = useState(playlistName);\n  useEffect(() => {\n    setNewPlaylistName(playlistName);\n  }, [playlistName]);\n  const handleTitleClick = () => {\n    setIsEditing(true);\n  };\n  const handleInputChange = e => {\n    setNewPlaylistName(e.target.value);\n  };\n  const handleBlur = () => {\n    setIsEditing(false);\n    onNameChange(newPlaylistName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Playlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: handleTitleClick,\n      style: {\n        cursor: 'pointer'\n      },\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newPlaylistName,\n        onChange: handleInputChange,\n        onBlur: handleBlur,\n        autoFocus: true,\n        id: \"playlist-name-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) : newPlaylistName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), playlistTracks.length > 0 ? playlistTracks.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: track.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: track.album\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onRemove(track),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, track.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tracks in this playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      children: \"Export to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Playlist, \"TpfCMEe8ODlEuqHnID5AEkltPhg=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Playlist","playlistName","playlistTracks","onRemove","onSave","onNameChange","_s","isEditing","setIsEditing","newPlaylistName","setNewPlaylistName","handleTitleClick","handleInputChange","e","target","value","handleBlur","className","children","onClick","style","cursor","type","onChange","onBlur","autoFocus","id","fileName","_jsxFileName","lineNumber","columnNumber","length","map","track","name","artist","album","_c","$RefreshReg$"],"sources":["C:/Users/Matthew De Haan/jamming/src/Playlist/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Playlist.css';\r\n\r\nfunction Playlist({ playlistName, playlistTracks, onRemove, onSave, onNameChange }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newPlaylistName, setNewPlaylistName] = useState(playlistName);\r\n\r\n  useEffect(() => {\r\n    setNewPlaylistName(playlistName);\r\n  }, [playlistName]);\r\n\r\n  const handleTitleClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewPlaylistName(e.target.value);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsEditing(false);\r\n    onNameChange(newPlaylistName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Playlist\">\r\n      <h2 onClick={handleTitleClick} style={{ cursor: 'pointer' }}>\r\n        {isEditing ? (\r\n          <input \r\n            type=\"text\" \r\n            value={newPlaylistName} \r\n            onChange={handleInputChange} \r\n            onBlur={handleBlur} \r\n            autoFocus \r\n            id=\"playlist-name-input\" \r\n          />\r\n        ) : (\r\n          newPlaylistName\r\n        )}\r\n      </h2>\r\n\r\n      {playlistTracks.length > 0 ? (\r\n        playlistTracks.map(track => (\r\n          <div key={track.id} className=\"track\">\r\n            <h3>{track.name}</h3>\r\n            <p>{track.artist}</p>\r\n            <p>{track.album}</p> {/* Added album information */}\r\n            <button onClick={() => onRemove(track)}>Remove</button>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No tracks in this playlist</p>\r\n      )}\r\n\r\n      <button onClick={onSave}>Export to Spotify</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playlist;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}